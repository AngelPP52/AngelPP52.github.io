(window.webpackJsonp=window.webpackJsonp||[]).push([[28],{559:function(t,e,a){"use strict";a.r(e);var r=a(4),s=Object(r.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"web-安全对前端的重要性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#web-安全对前端的重要性"}},[t._v("#")]),t._v(" Web 安全对前端的重要性")]),t._v(" "),a("p",[t._v("一提到 Web 安全，可能做前端的同学们会觉得：安全离我们很遥远吧，除了面试的时候问到的 XSS 和 CSRF 之外，似乎没有什么可以聊的了——毕竟，我们现在的开发基本都是用的 React、Vue 等框架，只要不手贱使用 "),a("code",[t._v("dangerouslySetInnerHTML")]),t._v(" 或 "),a("code",[t._v("v-html")]),t._v(" 那基本就没有 XSS 嘛！")]),t._v(" "),a("p",[t._v("那么问题来了：如果业务需求必须要求我们展示用户生成的富文本，该如何防御 XSS？对于这个问题，有几种答案：")]),t._v(" "),a("ol",[a("li",[t._v("为敏感 Cookie 设置 "),a("code",[t._v("HttpOnly")]),t._v(" 标记")]),t._v(" "),a("li",[t._v("过滤掉用户输入中的 "),a("code",[t._v("alert")]),t._v("、"),a("code",[t._v("javascript")]),t._v(" 等关键字")]),t._v(" "),a("li",[t._v("让后端来做（面试官：嗯？）")])]),t._v(" "),a("p",[t._v("虽然这些答案都是可行的，但完美的答案并不在这几个当中。作为一个写业务的人，我们不光需要考虑到攻击和防御方式，也要考虑这些攻击和防御对业务的影响有多大。例如过滤掉用户输入的做法，如果你在一个技术博客中留言：“在 JavaScript 中如何弹出对话框”，这句话中的“JavaScript”就会被上述简单的规则过滤掉。虽然这个规则成功的防御住了威胁，但也影响到了正常的业务。")]),t._v(" "),a("p",[t._v("这只是一个简单的例子，事实上，即使是跟浏览器相关的安全问题，也远不止 XSS 和 CSRF 这两个。更何况，目前的前端发展趋势之一是“大前端”。当前端开始写 Node.JS 之后，是不是更需要考虑之前本不需要考虑的安全问题了呢？")]),t._v(" "),a("h2",{attrs:{id:"web-漏洞的几个大分类"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#web-漏洞的几个大分类"}},[t._v("#")]),t._v(" Web 漏洞的几个大分类")]),t._v(" "),a("p",[t._v("对于常见的 Web 漏洞，我觉得可以大致分为这几类：")]),t._v(" "),a("ol",[a("li",[t._v("没有过滤输入或过滤不全")]),t._v(" "),a("li",[t._v("权限问题、配置问题")]),t._v(" "),a("li",[t._v("由人的不可靠性导致的问题")]),t._v(" "),a("li",[t._v("耗尽资源以影响正常业务")])]),t._v(" "),a("p",[t._v("其中，前两条在 CTF（安全竞赛中的赛制之一：夺旗赛）的 Web 题目中大量出现，第四条在现实世界中出现的频率稍微高一些，而第三条往往更需要引起开发者们的重视，因为——")]),t._v(" "),a("blockquote",[a("p",[t._v("在全部违规活动中，网络钓鱼与社会工程占 55%，内部恶意人员违规占 13%，远程访问占 9%。人为因素仍是企业网络安全团队所面临的最大障碍。[1]")])]),t._v(" "),a("p",[t._v("我花了一段时间，对这几类漏洞进行了一些思考。")]),t._v(" "),a("h3",{attrs:{id:"没有过滤输入或过滤不全"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#没有过滤输入或过滤不全"}},[t._v("#")]),t._v(" 没有过滤输入或过滤不全")]),t._v(" "),a("p",[t._v("可能大家都听说过近 20 年来最著名的漏洞之一：SQL 注入，也可能听说过一个小游戏："),a("a",{attrs:{href:"https://alf.nu/alert1",target:"_blank",rel:"noopener noreferrer"}},[t._v("alert(1) to win"),a("OutboundLink")],1),t._v("，这些都属于第一类漏洞，即没有过滤输入或过滤不全。这类漏洞有一个通用的特征：拼接了用户的输入，用户的输入中有恶意代码，恶意代码在各种地方被执行。")]),t._v(" "),a("p",[t._v("看这篇文章的大部分同学可能是前端，因此就用前端的著名漏洞 XSS 来引入吧。XSS 的基础例子很简单：")]),t._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[t._v("router"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/hello/:user'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("async")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("ctx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" next")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" user "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" ctx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("params"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    ctx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("response"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("type "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'text/html'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    ctx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("response"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("body "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("<h1>Hello, ")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("user"),a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("!</h1>")]),a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br")])]),a("p",[t._v("当我们访问 "),a("code",[t._v("/hello/rex")]),t._v(" 的时候，页面会展示“Hello, rex!”，但是如果我们把地址中的 "),a("code",[t._v("rex")]),t._v(" 换成这些（需要转译部分符号），事情就变得有意思起来了：")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("<script>alert(1)<\/script>")])]),t._v(" "),a("li",[a("code",[t._v('<script src="//t.cn/x"><\/script>')])]),t._v(" "),a("li",[a("code",[t._v("<img src=# onerror=alert(1)>")])]),t._v(" "),a("li",[a("code",[t._v("<img onload=alert(1)>")])])]),t._v(" "),a("p",[t._v("大家应该能猜出来这会导致什么。要么是弹出来一个框，要么是执行了一段外部脚本。")]),t._v(" "),a("p",[t._v("事实上，XSS 有三种，刚刚的例子叫“反射型 XSS”，另外两种叫“存储型 XSS”和“DOM Based XSS”。但是本质是一样的——用户通过某些方式提交了恶意代码，并且这些恶意代码在客户端（大多数情况下是浏览器）被执行了。")]),t._v(" "),a("ul",[a("li",[t._v("SQL 注入的本质跟 XSS 也是几乎一样的：用户通过某些方式提交了恶意代码，并且这些恶意代码在数据库实例上被执行了。")]),t._v(" "),a("li",[t._v("重定向攻击的本质跟 XSS 也是几乎一样的：用户通过某些方式提交了一个恶意网址，系统接受了这个恶意网址并把用户跳转了过去。")]),t._v(" "),a("li",[t._v("代码执行漏洞的本质跟 XSS 也是几乎一样的：用户通过某些方式提交了恶意代码，并且这些恶意代码在后端实例上被执行了。")]),t._v(" "),a("li",[t._v("任意文件上传的本质……（被打")])]),t._v(" "),a("p",[t._v("通过这些例子，大家应该大致了解了“没有过滤输入或过滤不全”的含义了。那么具体该如何防御呢？首先如果不考虑富文本业务的话，可以简单的应用一系列规则。还是以 XSS 为例：")]),t._v(" "),a("ul",[a("li",[t._v("过滤掉所有的 "),a("code",[t._v("<")]),t._v(" 等符号")]),t._v(" "),a("li",[t._v("禁止使用 "),a("code",[t._v("v-html")]),t._v(" 等方法，禁止设置 "),a("code",[t._v("innerHTML")])])]),t._v(" "),a("p",[t._v("那么必须使用富文本的情况呢？没关系，还有其它方式：")]),t._v(" "),a("ul",[a("li",[t._v("必须使用 "),a("code",[t._v("innerHTML")]),t._v(" 的情况下可以用成熟的 HTML parsing 库，遍历一遍，用白名单来过滤标签和属性")]),t._v(" "),a("li",[t._v("可以使用 CSP 来限制外部代码的加载和内联代码的执行（问题延伸：如何设置 CSP 才是合理的？）")])]),t._v(" "),a("p",[t._v("那么必须允许执行 JavaScript 的情况呢？")]),t._v(" "),a("p",[t._v("遇到瓶颈了。这时候，经验丰富的大佬（或者 CTF 中的 PHP 老手）会想到，我们可以替换一些危险函数为空函数，例如 "),a("code",[t._v("alert")]),t._v("、"),a("code",[t._v("eval")]),t._v("、"),a("code",[t._v("fetch")]),t._v(" 等（在我们自己的模块闭包中需要保存一份 "),a("code",[t._v("window")]),t._v(" 中的这些方法）。但是 XSS 的危害不止一种，虽然黑客不能发送 Cookie 到指定服务器了，但它可以修改页面元素，可以将用户跳转到黑客自己的恶意页面（不要笑，只要用户基数足够大，一定有小白用户会上当），甚至可以获取存在 Cookie 中的 CSRF Token 并代替用户发请求（这样你的 CSRF 防御就失效了）。")]),t._v(" "),a("p",[t._v("当然，一般情况下我们遇不到这么复杂的业务场景。但是这已经足够说明一件事情：即使是一个被大家熟知的漏洞，在某些情况下，想防御好也是需要了解业务的。")]),t._v(" "),a("h3",{attrs:{id:"权限问题、配置问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#权限问题、配置问题"}},[t._v("#")]),t._v(" 权限问题、配置问题")]),t._v(" "),a("p",[t._v("先来看几个漏洞：")]),t._v(" "),a("ul",[a("li",[t._v("部分 API 没有校验登录（多见于 PHP 工程）：一些传统的项目中，不同的 URL 是由不同文件 Handle 的，可能有的文件一开始写了鉴权的代码，但有的文件没有")]),t._v(" "),a("li",[t._v("微服务未做鉴权：目前微服务是后端的一个方向，如果一个微服务在开发时为了方便而没有做鉴权，恰好 URL 是对外网暴露的，这个 API 就可以被直接调用")]),t._v(" "),a("li",[t._v("用户权限配置不当：辖区管理员可以修改普通账号的密码，那能否修改超级管理员的密码呢")]),t._v(" "),a("li",[t._v("网上随处可见的 MongoDB 数据泄露、ES 数据泄露，原因竟然都是因为它们的默认密码是空密码")]),t._v(" "),a("li",[t._v("通过网站上暴露的 "),a("code",[t._v(".git")]),t._v(" 和 "),a("code",[t._v(".svn")]),t._v(" 目录，可以直接恢复整个 Git 仓库")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://camo.githubusercontent.com/c221eb577ebfef5e5037bfb6afab710814a958122a1385db8159a3182f895313/68747470733a2f2f69302e77702e636f6d2f7777772e68617a7a656c2e636e2f77702d636f6e74656e742f75706c6f6164732f323031392f30342f53637265656e2d53686f742d323031392d30342d32312d61742d31312e34342e34392d504d2e706e673f73736c3d31",alt:"可以恢复整个 Git 仓库的 Git Hack 工具"}})]),t._v(" "),a("p",[t._v("这些漏洞看似各有各的解决方案，有的需要统一入口，有的需要请第三方审计人员帮忙，有的需要设置禁止访问的目录……但是这些漏洞是否也有一些本质上的共同点呢？我认为是有的，当某一个决策（可能是一行配置信息，可能是一个业务需求）会导致一些本来没有权限的人能看到他们不该看的东西，权限和配置漏洞就形成了。")]),t._v(" "),a("p",[t._v("针对这类问题，其实有一句大家耳熟能详的话：“最小权限原则”，相信大家都知道这是什么意思。但是真正去执行它的人有多少呢？假设我们要起一个内部系统，上层的规定是不是“快速交付，权限问题先放松一下”；假设有个运营平台，产品经理配置的角色是不是常常会出现“All Permissions”的字样？在写 SQL 返回用户信息时，我们会不会写 "),a("code",[t._v("SELECT * FROM users LIMIT xxx")]),t._v(" 而忽略了 "),a("code",[t._v("users")]),t._v(" 表中其实保存了用户的密码哈希？")]),t._v(" "),a("p",[t._v("这类漏洞告诉我的一个经验是：即使是一句简单的话，想要执行起来，通常也是十分困难的。")]),t._v(" "),a("h3",{attrs:{id:"由人的不可靠性导致的问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#由人的不可靠性导致的问题"}},[t._v("#")]),t._v(" 由人的不可靠性导致的问题")]),t._v(" "),a("p",[t._v("“人是最不可靠的”，这句话经常出现在社会工程学的教学文章中。目前的网络攻击一半以上也是社会工程学。对于社会工程学的防护，网上的教程有很多，一般人只需要做到一些常见的措施，提升攻击成本，就已经足够保证安全了，因为对于黑客来说，只要攻击一个人的成本比获得的收益还要高，那么这个攻击就是不值得的。")]),t._v(" "),a("p",[t._v("但是企业是一个特殊的实体，在大部分情况下，攻击企业的收益比个人高多了。由于人的不可靠性，只要有一个可执行的攻击方式，就一定会有人中招。因此一些企业会定期做安全培训，甚至模拟黑客发送病毒邮件，只要点开就会被强制接受安全教育。对于企业的安全教育，网上也有一些文章，这里就不多提了。")]),t._v(" "),a("p",[t._v("有一个比较有趣的剧：《人生删除事务所》，里面有很多社会工程学的教程。")]),t._v(" "),a("blockquote",[a("p",[t._v("这简直是部社会工程学教科书式教学啊。留后门方便查数据；打电话玩 cosplay 套信息，套密码；社工搜资料用 python 脚本生成字典，暴力猜密码；警察局的电脑资料怎么弄到？直接演戏混进去拆硬盘！[2]")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://user-images.githubusercontent.com/27483702/101334129-6a149500-38b2-11eb-9587-c4569d4cbe9c.png",alt:"《人生删除事务所》片段"}})]),t._v(" "),a("h3",{attrs:{id:"耗尽资源以影响正常业务"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#耗尽资源以影响正常业务"}},[t._v("#")]),t._v(" 耗尽资源以影响正常业务")]),t._v(" "),a("p",[t._v("对于这类漏洞，最常见的就是 DoS/DDoS 了。至于这类漏洞的成因，其实也是有共性的——在处理某些逻辑的时候没有考虑到可能的流量峰值，以及业务的异常情况。从技术的角度来讲，这类漏洞的技术细节五花八门：")]),t._v(" "),a("ul",[a("li",[t._v("使用了可能会导致慢查询的 ORM 库")]),t._v(" "),a("li",[t._v("对外部依赖的调用时长未做限制，导致流量峰值时连接数过多")]),t._v(" "),a("li",[t._v("正则表达式在回溯时产生的性能问题")]),t._v(" "),a("li",[t._v("读写文件时忘记关闭文件，导致同时打开的文件句柄过多")]),t._v(" "),a("li",[t._v("错误的将大型对象放到了全局作用域，导致缓慢的内存泄漏")])]),t._v(" "),a("p",[t._v("这就要求我们做到三点，一是在技术的选型中，需要考虑这个技术的成熟度、发生风险时修复的难度（社区活跃度是个很好的指标）；二是在平时编码的过程中，需要有一定的压力测试；三是从公司层面上需要有定期的培训，尽量避免新人写出可以耗尽资源的代码。")]),t._v(" "),a("h2",{attrs:{id:"树立正确的安全观"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#树立正确的安全观"}},[t._v("#")]),t._v(" 树立正确的安全观")]),t._v(" "),a("p",[t._v("挖洞补洞是安全人员必须的工作，但是作为非安全方向的开发者，我们也需要树立正确的安全观。")]),t._v(" "),a("h3",{attrs:{id:"为什么会出现这些漏洞"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#为什么会出现这些漏洞"}},[t._v("#")]),t._v(" 为什么会出现这些漏洞")]),t._v(" "),a("p",[t._v("最表象的原因当然是开发者写代码的时候没有考虑到安全问题。如果只出现一两次，可以说是偶然，但现在国内国外有各种各样的信息泄漏事件：")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://zh.wikipedia.org/zh-hans/2011%E5%B9%B4%E4%B8%AD%E5%9B%BD%E7%BD%91%E7%AB%99%E7%94%A8%E6%88%B7%E4%BF%A1%E6%81%AF%E6%B3%84%E9%9C%B2%E4%BA%8B%E4%BB%B6",target:"_blank",rel:"noopener noreferrer"}},[t._v("2011 年中国网站用户信息泄露事件"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://twitter.com/0xdude/status/1095702540463820800",target:"_blank",rel:"noopener noreferrer"}},[t._v("2019 年深网视界数据泄漏事件"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://www.oschina.net/news/103558/202-million-private-resumes-exposed",target:"_blank",rel:"noopener noreferrer"}},[t._v("MongoDB 裸奔，2 亿国人求职简历泄漏"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://www.infoq.cn/article/dG1lUq*1FMWKDoi7tjkH",target:"_blank",rel:"noopener noreferrer"}},[t._v("Facebook 6 亿用户密码可被 2 万员工直接看"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"http://www.xinhuanet.com/fortune/2018-08/29/c_1123343927.htm",target:"_blank",rel:"noopener noreferrer"}},[t._v("华住 5 亿条用户信息疑泄露"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://www.zdnet.com/article/hacker-ransoms-23k-mongodb-databases-and-threatens-to-contact-gdpr-authorities/",target:"_blank",rel:"noopener noreferrer"}},[t._v("黑客清除并勒索 23k 个 MongoDB 数据库"),a("OutboundLink")],1)])]),t._v(" "),a("p",[t._v("……以及网络攻击事件。其中不乏 Facebook、新浪这样的大公司，这真的只有开发者的原因吗？")]),t._v(" "),a("p",[t._v("其实想一想，安全事故其实也是一类事故，那么抛开技术的差异性，其出现的原因跟其它事故没有太大的区别。海恩法则指出：")]),t._v(" "),a("blockquote",[a("p",[t._v("每一起严重事故的背后，必然有 29 次轻微事故，300 起未遂先兆，以及 1000 起事故隐患。[3]")])]),t._v(" "),a("p",[t._v("海恩法则是航空界关于飞行安全的法则。飞机之所以会成为最安全的交通工具，就是由于积累了一系列事故经验，并总结成了各种规章制度和培训机制。然而，对于普通公司和个人来说，要想做到这些又谈何容易：")]),t._v(" "),a("ul",[a("li",[t._v("大多数中小公司因为成本原因，没有专门的安全岗位")]),t._v(" "),a("li",[t._v("大部分普通人平时没有很强的安全意识，为了便利可以交出很多东西")]),t._v(" "),a("li",[t._v("国家虽然制定了《网络安全法》等法律，但向大众普及信息安全知识的力度远远不够")])]),t._v(" "),a("p",[t._v("当然也有一些值得欣慰的东西。“白帽子”是一类特殊的安全工作者，有的是专业安全团队的成员，有的是黑客出身但最终决定转型帮助社会建立安全的环境。"),a("a",{attrs:{href:"https://www.zhihu.com/question/58093923",target:"_blank",rel:"noopener noreferrer"}},[t._v("2016 年乌云漏洞报告平台被关闭"),a("OutboundLink")],1),t._v(" 是一个很可惜的事情，但现在国内的漏洞报告厂商纷纷上线了《白帽子协议》，对白帽子的行为进行了授权，给了他们更多的生存空间。在这群特殊的安全人员的保护下，很多简单的漏洞可以被及时封堵，这会大大提高网络攻击的困难程度。信息安全，任重道远。")]),t._v(" "),a("h3",{attrs:{id:"question-time！"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#question-time！"}},[t._v("#")]),t._v(" Question Time！")]),t._v(" "),a("p",[t._v("最后，就用这十道题目，来检验一下你的安全意识吧！")]),t._v(" "),a("ol",[a("li",[t._v("很多专业黑客都有大量的知识与工具，他们攻击一个大型的公司简直易如反掌。")]),t._v(" "),a("li",[t._v("我们普通人没有什么水平，对自身的数据泄露无能为力，只能依赖于专业安全人员的保护。")]),t._v(" "),a("li",[t._v("我们都是底层群众，公司也是小公司，黑客不会专门盯着我们来攻击，因此我们很安全。")]),t._v(" "),a("li",[t._v("即使一个网站代码简单到几乎不可能有漏洞，但运营人员依旧需要有很强的安全意识。")]),t._v(" "),a("li",[t._v("我使用所有能找到的工具扫描了我的网站，并修复了所有安全隐患，但我依旧不能掉以轻心。")]),t._v(" "),a("li",[t._v("我遇到了一个钓鱼网站，心想“反正它是非法网站”，于是便找出工具打算“为民除害”。")]),t._v(" "),a("li",[t._v("公司必须对所有员工做基本的安全培训，并在成本可控的范围内实行各种措施来加强安全。")]),t._v(" "),a("li",[t._v("在一次非常不重要的在线测试中，我发现了系统的一个漏洞，并决定用它获取所有正确答案。")]),t._v(" "),a("li",[t._v("我负责的系统有个很不起眼的漏洞，但该系统只能从公司内网访问，所以用不着费时间修复。")]),t._v(" "),a("li",[t._v("我爸喜欢用 1234 作为解锁密码，作为一个接受了安全培训的人，我坚持让他换成了指纹密码。")])]),t._v(" "),a("h2",{attrs:{id:"参考资料"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参考资料"}},[t._v("#")]),t._v(" 参考资料")]),t._v(" "),a("ul",[a("li",[t._v("[1] "),a("a",{attrs:{href:"https://www.secrss.com/articles/5498",target:"_blank",rel:"noopener noreferrer"}},[t._v("全球网络安全事件十大趋势总结 - 安全内参 | 决策者的网络安全知识库"),a("OutboundLink")],1)]),t._v(" "),a("li",[t._v("[2] "),a("a",{attrs:{href:"https://twitter.com/lcayu/status/1025812731314630656",target:"_blank",rel:"noopener noreferrer"}},[t._v("Lanpice 的推文"),a("OutboundLink")],1)]),t._v(" "),a("li",[t._v("[3] "),a("a",{attrs:{href:"https://wiki.mbalib.com/wiki/%E6%B5%B7%E6%81%A9%E6%B3%95%E5%88%99",target:"_blank",rel:"noopener noreferrer"}},[t._v("海恩法则 - MBA 智库百科"),a("OutboundLink")],1)])])])}),[],!1,null,null,null);e.default=s.exports}}]);