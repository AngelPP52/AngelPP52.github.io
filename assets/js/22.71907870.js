(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{501:function(r,a,t){r.exports=t.p+"assets/img/architect.ff4a0729.png"},551:function(r,a,t){"use strict";t.r(a);var e=t(4),v=Object(e.a)({},(function(){var r=this,a=r.$createElement,e=r._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":r.$parent.slotKey}},[e("h2",{attrs:{id:"背景"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#背景"}},[r._v("#")]),r._v(" 背景")]),r._v(" "),e("p",[r._v("在业务系统的日常运行中，势必会面对大量业务系统间数据同步的场景，以及相应的数据问题。")]),r._v(" "),e("p",[r._v("通常会有几种场景：")]),r._v(" "),e("ol",[e("li",[e("p",[r._v("同步基础数据进行关联查询、扩展列")]),r._v(" "),e("p",[r._v("如：SKU数据")]),r._v(" "),e("p",[r._v("可能的数据问题：列的值不一致；行记录缺失；")])]),r._v(" "),e("li",[e("p",[r._v("业务系统之间存在关联的状态流转")]),r._v(" "),e("p",[r._v("如：采供系统的预入库单 与 仓库系统的入库单 之间存在状态关联")]),r._v(" "),e("p",[r._v("可能的数据问题：两个系统存储的状态不符合业务约束；")])])]),r._v(" "),e("p",[r._v("同步机制可能是调用接口、队列 / GDS等，尽管有重试、补偿、记录错误等机制去保证数据最终一致性，但是仍然有可能出现数据问题。")]),r._v(" "),e("p",[r._v("由于数据分布在不同业务系统、由不同的团队进行管理，因此不容易发现问题、可能要等用户上报数据问题时才能发现。")]),r._v(" "),e("p",[r._v("因此，我们需要一套持续的监控机制主动发现这些数据问题。")]),r._v(" "),e("br"),r._v(" "),e("h2",{attrs:{id:"解决方案"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#解决方案"}},[r._v("#")]),r._v(" 解决方案")]),r._v(" "),e("h3",{attrs:{id:"解决思路"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#解决思路"}},[r._v("#")]),r._v(" 解决思路")]),r._v(" "),e("p",[r._v("如果在微服务架构下解决以上需求，会遇到两个方面的问题：")]),r._v(" "),e("p",[e("strong",[r._v("1.访问限制")]),r._v("：无论通过接口或访问数据库，都对现有的访问限制体系造成很大挑战；")]),r._v(" "),e("p",[e("strong",[r._v("2.占用在线资源")]),r._v("：可能对在线服务的稳定性造成影响；")]),r._v(" "),e("p",[r._v("通过分析，以上场景其实离线简单的数据处理场景，因此选取基于公司的 Airflow/Spark/Presto 来搭建持续的数据比对监控系统。")]),r._v(" "),e("br"),r._v(" "),e("h3",{attrs:{id:"主要组件及概念"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#主要组件及概念"}},[r._v("#")]),r._v(" 主要组件及概念")]),r._v(" "),e("h4",{attrs:{id:"airflow"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#airflow"}},[r._v("#")]),r._v(" Airflow")]),r._v(" "),e("p",[r._v("调度和监控工作流的平台，基于Python 编写的有向无环图（DAG）进行任务调度和管理。\n主要用于大数据生态的组件，也可以作为crontab的升级版应用于运维操作。")]),r._v(" "),e("h5",{attrs:{id:"task"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#task"}},[r._v("#")]),r._v(" Task")]),r._v(" "),e("p",[r._v("Task即任务，是Airflow调度的最小单位；通过Operator来创建任务。")]),r._v(" "),e("h5",{attrs:{id:"operator"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#operator"}},[r._v("#")]),r._v(" Operator")]),r._v(" "),e("p",[r._v("Operator是一系列封装好的常用TaskObject，如：")]),r._v(" "),e("ul",[e("li",[e("p",[e("strong",[r._v("SparkOperator")]),r._v("：提交一个Spark任务")])]),r._v(" "),e("li",[e("p",[e("strong",[r._v("PythonOperator")]),r._v("：执行一个Python Function")])]),r._v(" "),e("li",[e("p",[e("strong",[r._v("SSHOperator")]),r._v("：通过SSH连接主机并执行Shell命令")])])]),r._v(" "),e("h5",{attrs:{id:"dag（direct-acyclic-graph）"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#dag（direct-acyclic-graph）"}},[r._v("#")]),r._v(" DAG（Direct Acyclic Graph）")]),r._v(" "),e("p",[r._v("定义一组Task集合，使用Python描述了一系列Task及其依赖关系、调度逻辑。")]),r._v(" "),e("h5",{attrs:{id:"sensor"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#sensor"}},[r._v("#")]),r._v(" Sensor")]),r._v(" "),e("p",[r._v("检查预设的条件是否满足，满足后执行下游的Task。")]),r._v(" "),e("h5",{attrs:{id:"sla（service-level-agreements）"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#sla（service-level-agreements）"}},[r._v("#")]),r._v(" SLA（Service Level Agreements）")]),r._v(" "),e("p",[r._v("一段时间内应该完全的操作，否则触发另外任务，如发邮件发短信等；在 DAG-Level 和 Task-Level 都可以进行定义。")]),r._v(" "),e("br"),r._v(" "),e("h4",{attrs:{id:"spark"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#spark"}},[r._v("#")]),r._v(" Spark")]),r._v(" "),e("p",[r._v("批处理与实时运算的计算框架。")]),r._v(" "),e("h5",{attrs:{id:"yarn"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#yarn"}},[r._v("#")]),r._v(" YARN")]),r._v(" "),e("p",[r._v("Hadoop 2.0的资源管理系统。通过一个全局的资源管理器ResourceManager和每个应用程序独立的ApplicationMaster进行资源调度与管理。")]),r._v(" "),e("p",[r._v("ResourceManager负责整个系统的资源管理和分配，可以通过Queue进行业务线的资源限制与隔离。")]),r._v(" "),e("p",[r._v("ApplicationMaster负责单个应用程序的管理。")]),r._v(" "),e("h5",{attrs:{id:"spark-driver-server-client-mode-cluster-mode"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#spark-driver-server-client-mode-cluster-mode"}},[r._v("#")]),r._v(" Spark Driver Server/Client Mode/Cluster Mode")]),r._v(" "),e("ul",[e("li",[e("p",[e("strong",[r._v("Spark Driver Server")]),r._v("：一台业务组共享的服务器，用于提交Spark任务、存放任务代码、暂时存放输出结果。")])]),r._v(" "),e("li",[e("p",[e("strong",[r._v("Client Mode")]),r._v("：以Client Mode提交时，Spark Driver Program运行在Client上（Spark Driver Server），结果与文件存放在Client上，使用Client上的运行环境、存储和计算资源。")])]),r._v(" "),e("li",[e("p",[e("strong",[r._v("Cluster Mode")]),r._v("：以Cluster Mode提交时，Spark Driver Program运行在由YARN分配的ApplicationMaster上，结果与文件存放在Cluster上某一节点（Node）。")])])]),r._v(" "),e("h5",{attrs:{id:"container-executor-job-task"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#container-executor-job-task"}},[r._v("#")]),r._v(" Container/Executor/Job(Task)")]),r._v(" "),e("ul",[e("li",[e("p",[e("strong",[r._v("Yarn Container")]),r._v("：Spark Executor的运行环境容器")])]),r._v(" "),e("li",[e("p",[e("strong",[r._v("Spark Executor")]),r._v("：Spark任务执行者，相当于进程")])]),r._v(" "),e("li",[e("p",[e("strong",[r._v("Spark Job（Task）")]),r._v("：Spark任务，最小的执行单位")])])]),r._v(" "),e("br"),r._v(" "),e("h4",{attrs:{id:"presto"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#presto"}},[r._v("#")]),r._v(" Presto")]),r._v(" "),e("p",[r._v("分布式SQL查询引擎")]),r._v(" "),e("br"),r._v(" "),e("h2",{attrs:{id:"系统架构"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#系统架构"}},[r._v("#")]),r._v(" 系统架构")]),r._v(" "),e("p",[e("img",{attrs:{src:t(501),alt:""}})]),r._v(" "),e("p",[e("strong",[r._v("数据集成数据流")])]),r._v(" "),e("ul",[e("li",[r._v("基于Data Ingestion系统设置ETL任务每天同步数据到Presto")])]),r._v(" "),e("p",[e("strong",[r._v("数据比对与监控数据流")])]),r._v(" "),e("ol",[e("li",[r._v("SSH Operator：Spark Driver Server上执行Spark-submit")]),r._v(" "),e("li",[r._v("Spark-submit：以Client Mode提交Spark Job")]),r._v(" "),e("li",[r._v("Spark Job：通过SQL读取Presto数据并进行数据分析")]),r._v(" "),e("li",[r._v("Spark Job：整理结果写入MySQL")]),r._v(" "),e("li",[r._v("SSH Operator：执行Spark Driver Server上执行统计结果的Python脚本")]),r._v(" "),e("li",[r._v("Python script：读取监控结果数据整理并发送 监控结果 的SeaTalk告警")])]),r._v(" "),e("br"),r._v(" "),e("h2",{attrs:{id:"问题与思考"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#问题与思考"}},[r._v("#")]),r._v(" 问题与思考")]),r._v(" "),e("h3",{attrs:{id:"数据的实时性"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#数据的实时性"}},[r._v("#")]),r._v(" 数据的实时性")]),r._v(" "),e("p",[r._v("由于数据集成的数据每天执行一次ETL任务、不同数据源执行任务的时间不一致，引入了额外导致数据不一致的因素。")]),r._v(" "),e("p",[r._v("所以，数据比对系统主要用于监控变动不频繁的数据、或状态流转的终态。")]),r._v(" "),e("p",[r._v("如果需要想基于Spark体系解决这个问题，有两方面的思路：")]),r._v(" "),e("ul",[e("li",[e("p",[r._v("基于Airflow提供的Hooks或Sensor，接受ETL任务的触发")])]),r._v(" "),e("li",[e("p",[r._v("基于Spark Streaming实时计算，实时监控数据")])])]),r._v(" "),e("h3",{attrs:{id:"spark的定位与使用场景"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#spark的定位与使用场景"}},[r._v("#")]),r._v(" Spark的定位与使用场景")]),r._v(" "),e("p",[r._v("BE的日常工作主要是基于微服务架构处理在线业务场景，但离线场景的计算、数据处理/分析、监控缺少一些工具；而Spark在这些方面作为补充。")]),r._v(" "),e("p",[r._v("同时我们应该注意到，数据对比是辅助的、滞后的“兜底”策略，首要工作是提升在系统中数据同步的可靠性。")]),r._v(" "),e("br"),r._v(" "),e("h2",{attrs:{id:"参考资料"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#参考资料"}},[r._v("#")]),r._v(" 参考资料")]),r._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"https://docs.google.com/document/d/1AlpBVD3CKns_WDX8k7FLjX06IQkdmnI2S3quFbl0H_g/edit",target:"_blank",rel:"noopener noreferrer"}},[r._v("Shopee Airflow User Guide"),e("OutboundLink")],1)]),r._v(" "),e("li",[e("a",{attrs:{href:"https://confluence.shopee.io/pages/viewpage.action?pageId=187252120",target:"_blank",rel:"noopener noreferrer"}},[r._v("Shopee Spark User Guide"),e("OutboundLink")],1)])])])}),[],!1,null,null,null);a.default=v.exports}}]);